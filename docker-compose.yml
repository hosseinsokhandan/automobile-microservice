version: '3.5'

services:
  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    image: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
      APP_DB: automobile
    volumes:
       - postgres:/data/postgres
       - ./01-db.sh:/docker-entrypoint-initdb.d/01-db.sh
    ports:
      - "5432"
    restart: unless-stopped

  app:
    container_name: ${COMPOSE_PROJECT_NAME}-service
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: uvicorn main:app --reload --host 0.0.0.0 --port 80
    volumes:
      - ./app:/app
    expose:
      - "80"
    depends_on:
      - postgres
    networks:
      traefik: {}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${DOMAIN}`)"

volumes:
    postgres:

networks:
  traefik:
    external: true
    name: traefik_default